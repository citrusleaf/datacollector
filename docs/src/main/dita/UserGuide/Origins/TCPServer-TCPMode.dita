<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_bqt_tl4_sz">
 <title>TCP Modes</title>
 <conbody>
  <p><indexterm>TCP Server<indexterm>TCP modes</indexterm></indexterm>The TCP Server origin
            processes data differently depending on the mode that you select. The origin provides
            the following modes: <dl>
                <dlentry>
                    <dt>NetFlow messages</dt>
                    <dd>The TCP Server origin can process <ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-NetFlowVersions"
                        />. <ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-NetFlowInfo"
                        /></dd>
                    <dd>To process NetFlow messages, set the TCP Mode property to NetFlow. Then, for
                        NetFlow 9 data, configure the properties on the NetFlow 9 tab. NetFlow 5
                        data does not require additional configuration.</dd>
                </dlentry>
                <dlentry>
                    <dt>syslog messages</dt>
                    <dd>The TCP Server origin processes syslog messages in accordance with <xref
                            href="https://tools.ietf.org/html/rfc6587" format="html"
                            scope="external">RFC 6587</xref>, except the origin does not support
                        method changes. </dd>
                    <dd>The TCP Server origin can process the following types of syslog messages:<ul
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/UDP-syslog"
                            id="ul_fcp_mm4_4x">
                            <li/>
                        </ul></dd>
                    <dd>To process syslog messages, set the TCP Mode property to "syslog" and
                        configure the transfer framing mode. <note type="important">All TCP clients
                            must use the same transfer framing mode to transmit data.</note></dd>
                    <dd>Use one of the following transfer framing modes:<ul id="ul_bcf_rw3_tz">
                            <li>Octet counting - The frame indicates the length of the syslog
                                message and includes the entire contents of the message. </li>
                            <li>Non-transparent framing - The frame includes the syslog message and
                                a user-defined trailing separator characters. The origin uses the
                                separator characters to create records.<p>Use the following Java
                                    Unicode syntax to specify a separator character:
                                    <codeblock>\u&lt;Unicode character code></codeblock></p><p>To
                                    define multiple characters, simply list them as a group as
                                    appropriate, such
                                    as:<codeblock>\u&lt;Unicode character code>\u&lt;Unicode character code>\u&lt;Unicode character code></codeblock></p><p>For
                                    example, the default separator character is line feed, whose
                                    Unicode character code is 000A. To specify this as the separator
                                    character, enter <codeph>\u000A.</codeph></p></li>
                        </ul></dd>
                </dlentry>
                <dlentry>
                    <dt>Separated records</dt>
                    <dd>The TCP Server origin can process the supported <ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                        /> data formats when the data is separated by the specified record separator
                        characters. </dd>
                    <dd>To process supported data formats, set the TCP Mode property to Separated
                        Records and specify the record separator characters. Then, configure any
                        data format-related properties.<note type="important">All TCP clients must
                            use the same record separator characters.</note></dd>
                </dlentry>
                <dlentry>
                    <dt>Character data with length prefix</dt>
                    <dd>The TCP Server origin can process the supported <ph
                            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                        /> data formats when passed as character-based data with a length prefix. </dd>
                    <dd>To process supported data formats, set the TCP Mode property to Character
                        Data with Length Prefix and specify the character set of the data. </dd>
                    <dd>A length prefix consists of the digits that indicate the length of the data,
                        and a space character. The data to be converted to a record should
                        immediately follow the space character. <note>The length prefix must be in a
                            single-byte encoding, such as UTF-8. The data can be in any valid
                            character set, which you specify in the origin.</note><p>For example,
                            say a TCP client sends the following UTF-8 data:
                        </p><codeblock>11 hello world</codeblock></dd>
                    <dd>The length prefix is "11 ", which indicates that the data to be converted is
                        11 bytes long. The origin then converts the following 11 bytes, "hello
                        world" to a record.<p>You can use this TCP mode to capture raw syslog
                            messages that are framed with octet counting into a string
                        field.</p></dd>
                </dlentry>
            </dl></p>
 </conbody>
</concept>
